never ltl_0 {    /* !([] ((! ((np_==0))) || ((((((((Cards[0]==0)) && ((Cards[1]==0))) && ((Cards[2]==0))) && ((Cards[3]==0))) || (((((Cards[0]==1)) && ((Cards[1]==1))) && ((Cards[2]==1))) && ((Cards[3]==1)))) || (((((Cards[0]==2)) && ((Cards[1]==2))) && ((Cards[2]==2))) && ((Cards[3]==2)))) || (((((Cards[0]==3)) && ((Cards[1]==3))) && ((Cards[2]==3))) && ((Cards[3]==3)))))) */
T0_init:
	do
	:: atomic { (! (((! ((np_==0))) || ((((((((Cards[0]==0)) && ((Cards[1]==0))) && ((Cards[2]==0))) && ((Cards[3]==0))) || (((((Cards[0]==1)) && ((Cards[1]==1))) && ((Cards[2]==1))) && ((Cards[3]==1)))) || (((((Cards[0]==2)) && ((Cards[1]==2))) && ((Cards[2]==2))) && ((Cards[3]==2)))) || (((((Cards[0]==3)) && ((Cards[1]==3))) && ((Cards[2]==3))) && ((Cards[3]==3))))))) -> assert(!(! (((! ((np_==0))) || ((((((((Cards[0]==0)) && ((Cards[1]==0))) && ((Cards[2]==0))) && ((Cards[3]==0))) || (((((Cards[0]==1)) && ((Cards[1]==1))) && ((Cards[2]==1))) && ((Cards[3]==1)))) || (((((Cards[0]==2)) && ((Cards[1]==2))) && ((Cards[2]==2))) && ((Cards[3]==2)))) || (((((Cards[0]==3)) && ((Cards[1]==3))) && ((Cards[2]==3))) && ((Cards[3]==3)))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
